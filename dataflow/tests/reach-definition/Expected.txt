2 -> 3 EACH_TO_EACH
3 -> 4 EACH_TO_EACH
4 -> 8 THEN_TO_BOTH
4 -> 10 ELSE_TO_BOTH
8 -> 11 EACH_TO_EACH
10 -> 11 EACH_TO_EACH
11 -> 0 EACH_TO_EACH

2:
Process order: 1
TransferInput#0
Before:   reach definitions = none
~~~~~~~~~
<entry>

3:
Process order: 2
TransferInput#1
Before:   reach definitions = none
~~~~~~~~~
a   [ VariableDeclaration ]
1   [ IntegerLiteral ]
a = 1   [ Assignment ]
b   [ VariableDeclaration ]
2   [ IntegerLiteral ]
b = 2   [ Assignment ]
c   [ VariableDeclaration ]
3   [ IntegerLiteral ]
c = 3   [ Assignment ]
a   [ LocalVariable ]
0   [ IntegerLiteral ]
(a > 0)   [ GreaterThan ]
~~~~~~~~~
AnalysisResult#1
After:   reach definitions = a = 1, b = 2, c = 3

4:
Process order: 3
TransferInput#15
Before:   reach definitions = a = 1, b = 2, c = 3
~~~~~~~~~
ConditionalBlock: then: 8, else: 10

8:
Process order: 4
TransferInput#17
Before:   reach definitions = a = 1, b = 2, c = 3
~~~~~~~~~
d   [ VariableDeclaration ]
a   [ LocalVariable ]
c   [ LocalVariable ]
(a + c)   [ NumericalAddition ]
d = (a + c)   [ Assignment ]
~~~~~~~~~
AnalysisResult#3
After:   reach definitions = d = (a + c), a = 1, b = 2, c = 3

10:
Process order: 5
TransferInput#18
Before:   reach definitions = a = 1, b = 2, c = 3
~~~~~~~~~
e   [ VariableDeclaration ]
a   [ LocalVariable ]
b   [ LocalVariable ]
(a + b)   [ NumericalAddition ]
e = (a + b)   [ Assignment ]
~~~~~~~~~
AnalysisResult#5
After:   reach definitions = a = 1, b = 2, c = 3, e = (a + b)

11:
Process order: 6
TransferInput#32
Before:   reach definitions = d = (a + c), a = 1, b = 2, c = 3, e = (a + b)
~~~~~~~~~
b   [ LocalVariable ]
0   [ IntegerLiteral ]
b = 0   [ Assignment ]
a   [ LocalVariable ]
b   [ LocalVariable ]
a = b   [ Assignment ]
a   [ LocalVariable ]
return a   [ Return ]
~~~~~~~~~
AnalysisResult#7
After:   reach definitions = d = (a + c), b = 0, a = b, c = 3, e = (a + b)

0:
Process order: 7
TransferInput#42
Before:   reach definitions = d = (a + c), b = 0, a = b, c = 3, e = (a + b)
~~~~~~~~~
<exit>
